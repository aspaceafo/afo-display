<?php
// $Id$

/**
 * @file
 *
 * Display and theme functions for AFO site.
 */

/**
 * Implementation of hook_init.
 */
function afo_display_init() {
	drupal_add_css(drupal_get_path('module', 'afo_display').'/afo_global.css');
	drupal_add_js(drupal_get_path('module', 'afo_display').'/afo_global.js');
}

/**
 * Implementation of hook_menu().
 */
function afo_display_menu() {
	$items['admin/settings/afo/display'] = array(
		'title' => 'AFO Display Settings',
		'description' => 'Admin settings for AFO Display module',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('afo_display_admin_settings'),
		'file' => 'afo_display.admin.inc',
		'access arguments' => array('administer content'),
		'type' => MENU_LOCAL_TASK,
	);
	
	return $items;
}

/**
 * Implementation of hook_nodeapi().
 */
function afo_display_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
	switch($op) {
		case 'load':
			//if(isset($node->body)) $node->body = theme('afo_display_text', $node->body, array('size'=>'full'));
			break;
	
		case 'view':			
			// wrap body in div
			if(strlen($node->content['body']['#value']) > 0) {
				$node->content['body']['#value'] = '<div class="node-body"><div class="node-body-inner">'.$node->content['body']['#value'].'</div></div>';
			}
			
			break;
	}
}

/**
 * Implementation of hook_link.
 */
function afo_display_link($type, $object, $teaser = FALSE) {
	if($type == 'node') {
	
		// if comments, add comment link
		if($object->comment_count > 0) {
		
			if($object->type == 'forum') $label = 'Replies';
			else $label = 'Comments';
		
			$links['see-comments'] = array(
				'title' => t("See $label (") . $object->comment_count . ')',
				'href' => '#',
				'query' => 'target=#comments',
				'attributes' => array(
					'class' => 'opener',
				),
			);
		}
	}
	
	return $links;
}

/**
 * Implementation of hook_link_alter
 */
function afo_display_link_alter(&$links, $node, $comment = NULL) {
	if($node->type == 'forum' && is_array($links['comment_add'])) {
		$links['comment_add']['title'] = t('Add new reply');
	}
}

/**
 * Implementation of hook_elements
 */
function afo_display_elements() {
	return array(
   		'afo_column' => array(
			'#input' => true,
			'#position' => null,
			'#width' => null,
		),
   		'afo_contentbox' => array(
			'#input' => true,
		),
	);
}

/**
 * Implementation of hook_form_alter.
 */
function afo_display_form_alter(&$form, &$form_state, $form_id) {

	// change "Vocabularies" fieldset title to "Categories"
	if(isset($form['taxonomy']['#title'])) $form['taxonomy']['#title'] = t('Categories');

}

/******************************************** THEME functions **/

/**
 * Implementation of hook_theme.
 */
function afo_display_theme() {
	return array(

		'afo_display_node_thumbnail' => array(
			'arguments' => array(
				'nid' => null,
				'imagecache_preset' => null,
				'path' => null,
				'options' => null,
			),
			'file' => 'afo_display.thumbnail.inc',
		),

		'afo_display_user_thumbnail' => array(
			'arguments' => array(
				'uid' => null,
				'imagecache_preset' => null,
				'path' => null,
				'options' => null,
			),
			'file' => 'afo_display.thumbnail.inc',
		),

		'afo_display_grid' => array(
			'arguments' => array(
				'items' => array(),
				'title' => null,
				'op' => null,
				'options' => array(),
			),
			'file' => 'afo_display.grid.inc',
		),

		'afo_display_table' => array(
			'arguments' => array(
				'items' => array(),
				'title' => null,
				'op' => null,
				'options' => array(),
			),
			'file' => 'afo_display.table.inc',
		),
		
		'afo_display_slideshow' => array(
			'arguments' => array(
				'nids' => null,
				'title' => null,
				'options' => null,
			),
			'file' => 'afo_display.slideshow.inc',
		),

		'afo_display_lightbox' => array(
			'arguments' => array(
				'nids' => null,
				'title' => null,
				'options' => null,
			),
			'file' => 'afo_display.lightbox.inc',
		),

		'afo_display_deadline' => array(
			'arguments' => array(
				'timestamp' => null,
			),
			'file' => 'afo_display.deadline.inc',
		),
		
		'afo_column' => array(
			'arguments' => array(
				'element' => null,
			),
			'file' => 'afo_display.column.inc',
		),
		
		'afo_index' => array(
			'arguments' => array(
				'items' => array(),
				'options' => array(),
			),
			'file' => 'afo_display.index.inc',
		),
		
		'afo_contentbox' => array(
			'arguments' => array(
				'element' => null,
			),
			'file' => 'afo_display.contentbox.inc',
		),

		'afo_display_view_options' => array(
			'arguments' => array(
				'element' => null,
			),
			'file' => 'afo_display.view_options.inc',
		),

		'afo_display_icon' => array(
			'arguments' => array(
				'type' => null,
			),
			'file' => 'afo_display.icon.inc',
		),

		'afo_display_text' => array(
			'arguments' => array(
				'text' => null,
				'options' => null,
			),
			'file' => 'afo_display.text.inc',
		),

		'afo_display_indexsearch' => array(
			'arguments' => array(
				'form' => null,
			),
			'file' => 'afo_display.index.inc',
		),
		
	);
}
